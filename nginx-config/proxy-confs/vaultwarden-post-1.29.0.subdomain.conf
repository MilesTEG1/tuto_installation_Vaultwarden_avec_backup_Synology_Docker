## Version 2023/07/16

  # ╔══════════════════════════════════════════════════════════════════════════╗
  # ║                  vaultwarden-post-1.29.0.subdomain.conf                  ║
  # ║ Fichier de configuration pour Nginx@Swag pour Vaultwarden à partir de    ║
  # ║ la mise à jour 1.29.0                                                    ║
  # ╚══════════════════════════════════════════════════════════════════════════╝

# make sure that your vaultwarden container is named vaultwarden
# make sure that your dns has a cname set for vaultwarden

# The `upstream` directives ensure that you have a http/1.1 connection
# This enables the keepalive option and better performance
#
# Define the server IP and ports here.
# upstream upstream_app {
#     # zone vaultwarden-default 64k;
#     server http://192.168.xxx.yyy:8080;
#     keepalive 2;
# }


# Needed to support websocket connections
# See: https://nginx.org/en/docs/http/websocket.html
# Instead of "close" as stated in the above link we send an empty value.
# Else all keepalive connections will not work.
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' "";
}

server {
    # For older versions of nginx appened http2 to the listen line after ssl and remove `http2 on`
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name my-vault.*;

    include /config/nginx/ssl.conf;

    client_max_body_size 525M;

    # enable for ldap auth (requires ldap-location.conf in the location block)
    #include /config/nginx/ldap-server.conf;

    # enable for Authelia (requires authelia-location.conf in the location block)
    #include /config/nginx/authelia-server.conf;

    # enable for Authentik (requires authentik-location.conf in the location block)
    #include /config/nginx/authentik-server.conf;
    
    # GeoIP Blocking with Maxmind Docker-MOD
    #include /config/nginx/maxmind-geoblock_and_LAN.conf;


    location / {
        # enable the next two lines for http auth
        #auth_basic "Restricted";
        #auth_basic_user_file /config/nginx/.htpasswd;

        # enable for ldap auth (requires ldap-server.conf in the server block)
        #include /config/nginx/ldap-location.conf;

        # enable for Authelia (requires authelia-server.conf in the server block)
        #include /config/nginx/authelia-location.conf;

        # enable for Authentik (requires authentik-server.conf in the server block)
        #include /config/nginx/authentik-location.conf;

        # GeoIP Blocking with Maxmind Docker-MOD
        # include /config/nginx/maxmind-geoblock_and_LAN.conf;
        
        # Restrict access to some IPs only (LAN & VPNs)
        # include /config/nginx/ACL.IP-LAN.conf;

        include /config/nginx/proxy.conf;
        include /config/nginx/resolver.conf;
        set $upstream_app 192.168.xxx.yyy;
        set $upstream_port 8080;
        set $upstream_proto http;
        # proxy_pass vaultwarden-default;
        proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    }

    location /admin {
        # enable the next two lines for http auth
        #auth_basic "Restricted";
        #auth_basic_user_file /config/nginx/.htpasswd;

        # enable for ldap auth (requires ldap-server.conf in the server block)
        #include /config/nginx/ldap-location.conf;

        # enable for Authelia (requires authelia-server.conf in the server block)
        #include /config/nginx/authelia-location.conf;

        # enable for Authentik (requires authentik-server.conf in the server block)
        #include /config/nginx/authentik-location.conf;

        # GeoIP Blocking with Maxmind Docker-MOD
        # include /config/nginx/maxmind-geoblock_and_LAN.conf;

        # Restrict access to some IPs only (LAN & VPNs)
        # include /config/nginx/ACL.IP-LAN.conf;

        include /config/nginx/proxy.conf;
        include /config/nginx/resolver.conf;
        set $upstream_app 192.168.xxx.yyy;
        set $upstream_port 8080;
        set $upstream_proto http;
        # proxy_pass vaultwarden-default;
        proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    }
}